# Server Port (Optional, defaults to 8080)
# server.port=8080

# --- Kafka Config ---
# Use the Kafka service name directly
spring.kafka.consumer.group-id=aegis-triage
spring.kafka.consumer.bootstrap-servers=kafka:9092

# --- gRPC Client Config ---
# 'agent-service' is the name matching the @GrpcClient annotation
# Use the Python service name directly
grpc.client.agent-service.address=static://python-agent-host:50051
grpc.client.agent-service.negotiation-type=plaintext



# # Server Configuration
# server.port=8080

# # --- Kafka Config ---
# spring.kafka.consumer.group-id=aegis-triage
# spring.kafka.consumer.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}

# # --- gRPC Client Config ---
# # 'agent-service' is a custom name for our client
# # We use the env var from docker-compose, defaulting to 'localhost' for local dev
# grpc.client.agent-service.address=static://${GRPC_AGENT_HOST:localhost}:50051
# grpc.client.agent-service.negotiation-type=plaintext




# # Define our application name
# spring.application.name=java-triage-service

# # Configure the Kafka Consumer
# # The server is 'kafka:9092' because 'kafka' is the service name
# # in our docker-compose.yml file.
# spring.kafka.consumer.bootstrap-servers=kafka:9092

# # This is our consumer group ID
# spring.kafka.consumer.group-id=aegis-triage-group

# # We'll tell our listener to read from the beginning of the topic
# spring.kafka.consumer.auto-offset-reset=earliest
